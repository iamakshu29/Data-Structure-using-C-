#include<bits/stdc++.h>
using namespace std;

bool balancedParanthesis(string s)
{
	stack<char> st;
	int n = s.length();
	bool ans = true;
	for (int i = 0; i < n; i++)
	{
		if (s[i] == '{' || s[i] == '(' || s[i] == '[')
		{
			st.push(s[i]);
		}

		else if (s[i] == '}')
		{
			if (!st.empty() && st.top() == '{')
			{
				st.pop();
			}
			else
			{
				ans = false;
				break;
			}
		}

		else if (s[i] == ']')
		{
			if (!st.empty() && st.top() == '[')
			{
				st.pop();
			}
			else
			{
				ans = false;
				break;
			}
		}

		else if (s[i] == ')')
		{
			if (!st.empty() && st.top() == '(')
			{
				st.pop();
			}
			else
			{
				ans = false;
				break;
			}
		}
	}

	if (!st.empty())
		return false;

	return ans;
}

int main()
{
#ifndef ONLINE_JUDGE
	// for getting input from input.txt
	freopen("input.txt", "r", stdin);
	// for writing output to output.txt
	freopen("output.txt", "w", stdout);
#endif


	string s = "[{()}]";


	if (balancedParanthesis(s))
		cout << "Valid String";
	else
		cout << "Invalid String";

	return 0;
}


