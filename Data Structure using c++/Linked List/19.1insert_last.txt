#include<iostream>

using namespace std;

class Node{
public:
    int data;
    Node *next;
};

class LinkedList{
private:
    Node *first;
    Node *last;
public:
    LinkedList()
    {
        first = nullptr;
        last = nullptr;
    }
    Node* GET()
    {
        return first;
    }
    void create(int b[],int n)
    {
        Node *t=nullptr;
        first = new Node;
        first->data = b[0];
        first->next = nullptr;
        last = first;

        for(int i=1;i<=n;i++)
        {
            t = new Node;
            t->data = b[i];
            t->next = nullptr;
            last->next = t;
            last = t;
        }
    }
    void display(Node *p)
    {
        cout << "elements are: " << endl;
        while(p!=nullptr)
        {
            cout << p->data << endl;
            p = p->next;
        }
    }


    void insert_last(int ele)
    {
        Node *p;
        p = new Node;
        p->data = ele;
        p->next = nullptr;
        if(first == nullptr)
        {
            first = last = p;
        }
        else
        {
            last->next = p;
            last = p;
        }
//        int x;
//        cout << "enter the element you want to insert at last place: " << endl;
//        cin >> x;
//        node *q;
//            q = new node;
//            q->data = x;
//            q->next = nullptr;
//            last->next = q;
//            last = q;
//this whole comment section is bit wrong bcoz of (if condition) as if the if condition is satisfied then
// we dont have any next for last ie last->next not exist......we have to do first = last = p directly
    
    }
};

int main(){
    LinkedList a;
    int b[]{1,2,3,4,5,6};
    a.create(b,5);
    a.display(a.GET());
    a.insert_last(7);
    a.display(a.GET());
    a.insert_last(8);
    a.display(a.GET());

return 0;
}
